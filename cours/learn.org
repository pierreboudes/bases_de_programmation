


* Programmer pour apprendre
 http://worrydream.com/LearnableProgramming/

* The environment
** Read the vocabulary
- make meaning transparent
- explain in context

** Follow the flow

** See the state
- show the data
- show comparisons
- no hidden state

** Create by reacting -- start somewhere, then sculpt
- Get something on the screen as soon as possible
- dump the parts bucket onto the floor

** Create by abstracting

the learner control the lower-level details, understand them, develop trust in them, before handing off that control to an abstraction and moving to a higher level of control.

start constant, then vary

start with one, then get many



* Language
** Identity and metaphor -- I relate the computer's world to myself
** decomposition -- I break down my thoughts into mind-sized pieces
** recomposition -- glue pieces together
** Readability -- 


* Exercices

** Exo 1

Améliorer
- reacting: sculpt.
- abstraction: one->many, constant->vary.


#+NAME: exo1.c
#+BEGIN_SRC C
#include <stdlib.h>
#include <stdio.h>

void afficher_triangle(int cote);

int main() {
    int i; /* var de boucle */

    /* testons différentes tailles de triangles */
    for (i = 2; i <= 10; i += 2) {
        printf("\n\nafficher_triangle(%d)\n", i);
        afficher_triangle(i);
    }
    return EXIT_SUCCESS;
} 


void afficher_triangle(int cote) {
    int i; /* var de boucle */

    /* il faudrait deja arriver a faire un carre ! */
    for (i = 0; i < cote; i = i + 1) {/* pour chaque ligne */
        /* afficher une ligne de cote etoiles. Faire une sous-procedure ? */
        printf("*<-- %d -->*\n", cote);
    }
} 
#+END_SRC

** Visualiser des données

#+NAME: exo1.c
#+BEGIN_SRC C
typedef struct {
  char nom[64];
  char prenom[64];
  int age;
} fiche_t;


void visualiser_fiche_t(f) {
  printf("nom: \t\"%s\"\n", f.nom);
  printf("prenom: \t\"%s\"\n", f.prenom);
  printf("age: \t%d\n");
}

void visualiser_tab(int t[], int taille) {
 int i;
 printf("[");
 if (taille > 0) {
   for (i = 0; i < taille - 1; i = i + 1) {
     printf("%d, ", t[i]);
   }
   printf("%d", t[taille - 1]);
 }
 else {
   printf("<vide>");
 }
 printf("]");
}
#+END_SRC


